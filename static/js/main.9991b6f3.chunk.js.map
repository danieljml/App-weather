{"version":3,"sources":["App.js","index.js"],"names":["convertTimezoneToMinutes","timezone","timezoneInMinutes","moment","utcOffset","format","api","App","useState","weatherData","setWeatherData","weather","setWeather","type","message","alert","setAlert","FORM","useRef","handlerTimer","setTimeout","getInputCountry","e","preventDefault","form","current","formData","FormData","country","Object","fromEntries","entries","searchWeatherByCountry","reset","useEffect","addEventListener","a","fetch","res","json","data","status","main","temp","weatherTopSection","className","src","alt","Math","round","weatherBottomSection","icon","name","sys","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","description","map","item","join","pressure","humidity","ref","id","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9991b6f3.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport './index.css';\r\n\r\nconst convertTimezoneToMinutes = timezone => {\r\n  const timezoneInMinutes = timezone / 60;\r\n  const timezoneToMinutes = moment().utcOffset(timezoneInMinutes).format('h:mm A');\r\n  return timezoneToMinutes;\r\n};\r\n\r\nconst api = {\r\n  key: '4aa692caf0bf7cf7a224fe81a3ca4959',\r\n  base: 'https://api.openweathermap.org/data/2.5/',\r\n};\r\n\r\nfunction App() {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [weather, setWeather] = useState('');\r\n  const [alert, setAlert] = useState({ type: '', message: '' });\r\n  const FORM = useRef(null);\r\n\r\n  const handlerTimer = () => {\r\n    setTimeout(() => setAlert({ type: '', message: '' }), 3000);\r\n  };\r\n\r\n  const getInputCountry = e => {\r\n    e.preventDefault();\r\n    const form = FORM?.current;\r\n    const formData = new FormData(form);\r\n    const { country } = Object.fromEntries(formData.entries());\r\n    searchWeatherByCountry(country);\r\n    form.reset();\r\n  };\r\n\r\n  useEffect(() => {\r\n    FORM?.current?.addEventListener('submit', getInputCountry);\r\n  }, []);\r\n\r\n  const searchWeatherByCountry = async country => {\r\n    const res = await fetch(`${api.base}weather?q=${country}&units=metric&APPID=${api.key}`);\r\n    const data = await res.json();\r\n    if (res.status === 200) {\r\n      setWeatherData(data);\r\n      setAlert({ type: 'success', message: 'Success request' });\r\n      handlerTimer();\r\n      if (data.main.temp > 16) {\r\n        setWeather('warm');\r\n        return;\r\n      }\r\n      setWeather('cold');\r\n    } else {\r\n      setAlert({ type: 'error', message: 'Invalid country' });\r\n    }\r\n    handlerTimer();\r\n  };\r\n\r\n  const dateBuilder = d => {\r\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n\r\n    let days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  const weatherTopSection = weatherData ? (\r\n    <>\r\n      <img className=\"top__image\" src={weather === 'warm' ? 'https://i.imgur.com/H2Fa2Ye.jpg' : 'https://i.imgur.com/FK28j2H.png'} alt=\"img-weather\" />\r\n      <div className=\"top__content\">\r\n        <p>{weatherData.weather[0]?.main}</p>\r\n        <span>{Math.round(weatherData.main.temp)}Â°</span>\r\n      </div>\r\n    </>\r\n  ) : (\r\n    ''\r\n  );\r\n\r\n  const weatherBottomSection = weatherData ? (\r\n    <>\r\n      <div className=\"container__image\">\r\n        <img className={weather} src={`https://openweathermap.org/img/wn/${weatherData.weather[0]?.icon}@2x.png`} alt=\"icon\" />\r\n      </div>\r\n      <p className=\"location\">\r\n        {weatherData.name}, {weatherData.sys.country}\r\n      </p>\r\n      <p className=\"date\">{dateBuilder(new Date())}</p>\r\n      <ul>\r\n        <li>\r\n          Description: <span>{weatherData.weather[0].description}</span>\r\n        </li>\r\n        <li>\r\n          Coords:{' '}\r\n          {Object.entries(weatherData['coord'])\r\n            .map(item => {\r\n              return `${item[0]}: ${item[1]}`;\r\n            })\r\n            .join(', ')}\r\n        </li>\r\n        <li>Timezone: {convertTimezoneToMinutes(weatherData.timezone)}</li>\r\n        <li>Pressure: {Math.round(weatherData.main.pressure)}</li>\r\n        <li>Humidity: {Math.round(weatherData.main.humidity)}</li>\r\n      </ul>\r\n    </>\r\n  ) : (\r\n    ''\r\n  );\r\n\r\n  return (\r\n    <div className={`container__app ${weather}`}>\r\n      <div className={`alert ${alert.type}`}>\r\n        <p>{alert.message}</p>\r\n      </div>\r\n      <main className=\"app\">\r\n        <div className=\"container__top\">\r\n          <header className=\"block\">\r\n            <form ref={FORM} id=\"form-country\" className=\"form-weather\">\r\n              <input className=\"form__input\" type=\"text\" name=\"country\" placeholder=\"Search weather by country\" />\r\n              <button className=\"form__btn\">\r\n                <BsSearch className=\"btn__icon\" />\r\n              </button>\r\n            </form>\r\n          </header>\r\n          {weatherTopSection}\r\n        </div>\r\n        <div className={`container__bottom ${weather}`}>{weatherBottomSection}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}